{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Mercury: the BBVA Python Library for Machine Learning and Data Science","text":"<p>We contribute to the open-source community with Mercury, the BBVA Python library for Machine Learning and Data Science. Discover this comprehensive suite of tools designed to streamline the creation of AI models.</p> <p></p>"},{"location":"#accelerate-ml-workflows","title":"Accelerate ML workflows","text":"<p>Mercury offers a range of tools and utilities that simplify and accelerate the creation of Machine Learning models, allowing experts to focus on the key aspects of their work.</p> <p></p>"},{"location":"#use-it-and-contribute","title":"Use it and contribute!","text":"<p>This library was originally an Inner Source project at BBVA, but now some assets are open-source! We welcome everyone to use and contribute to the library: together, we can improve it and make it more useful.</p> <p></p>"},{"location":"#powered-by-ml-experts","title":"Powered by ML experts","text":"<p>We work to ensure that Mercury continues to grow and release new assets. The Mercury core team maintains the library updated and proactively develops new functionalities.</p>"},{"location":"#mercurys-micro-repositories","title":"Mercury\u2019s Micro-Repositories","text":"<p>Mercury is structured with multiple micro-repositories in a highly modular design. These packages are available on Github, where you will also find installation instructions, documentation, and examples of how to use the library. Each repository is independent, but some have interdependencies. For example, mercury-robust uses mercury-dataschema and mercury-monitoring underneath.</p> <ul> <li> <p> mercury-dataschema</p> <p>Utility package that automatically infers feature types and calculates different statistics based on those types, given a Pandas DataFrame. It is very useful for validating whether different datasets match the same schema, or for using their statistics to calculate drift.</p> <p> Documentation</p> </li> <li> <p> mercury-explainability</p> <p>Offers a collection of methods and techniques to interpret and inspect ML models. This package focuses on providing explanations for classification and regression models, both locally and globally, to gain a better understanding of how an ML model works and the factors that contribute to its predictions.</p> <p> Documentation</p> </li> <li> <p> mercury-monitoring</p> <p>Package dedicated to model monitoring. It\u2019s crucial to continuously monitor the performance of ML models in production. This involves detecting changes in the incoming data distribution or data drift and estimating the model accuracy at inference time.</p> <p> Documentation</p> </li> <li> <p> mercury-reels</p> <p>A library to analyze sequences of events extracted from transactional data. These events can be automatically discovered or manually defined.</p> <p> Documentation</p> </li> <li> <p> mercury-robust</p> <p>A lightweight framework for performing robust testing on ML models and datasets. It ensures that data workflows and models are robust against certain conditions, such as data drift, label leaking, or input data schema issues, by raising an exception when they fail.</p> <p> Documentation</p> </li> <li> <p> mercury-settrie</p> <p>A Python library for creating, updating, and querying SetTrie objects efficiently. To ensure high performance, it uses an underlying C++ implementation, which optimizes subset and superset search operations.</p> <p> Documentation</p> </li> <li> <p> mercury-graph</p> <p>This library offers graph analytics capabilities with a technology-agnostic API, enabling users to apply a curated range of performant and scalable algorithms and utilities regardless of the underlying data framework.</p> <p> Documentation</p> </li> </ul>"},{"location":"#mercurys-strengths","title":"Mercury's strengths","text":"<p>Each Mercury component brings something new or offers clear advantages over other available analytical solutions. The modules are functional and production-ready, and they are designed as pieces of code that are not tied to specific business cases, so anyone can use them.</p> <p></p>"},{"location":"#from-small-utilities-to-complete-frameworks","title":"From small utilities to complete frameworks","text":"<p>Some packages are designed to solve specific Data Science tasks, while others offer a diverse collection of Machine Learning functionalities through a unified API.</p> <p></p>"},{"location":"#high-quality-components","title":"High-quality components","text":"<p>Every function or class in Mercury has been thoroughly tested and documented by a dedicated core team from BBVA. The library is production-ready, meaning that it has been designed for deploying ML models in real-world environments. Additionally, tutorials are provided to facilitate the adoption of the library.</p> <p></p>"},{"location":"#domain-specific","title":"Domain-specific","text":"<p>In Mercury, you may find a representative sample of relevant ML domains for financial services such as explainability, monitoring, or sequence modeling.</p>"},{"location":"#our-journey-to-open-source","title":"Our journey to Open-Source","text":"<p>The Mercury Python library was born as an Inner-Source project within BBVA. At the time, our primary objective was to streamline the use of code components among the bank\u2019s technology teams, dispersed across different departments and countries. This initiative not only improved code quality \u2013as more people could review, comment and document it\u2013, but also strengthened a culture of community and knowledge sharing.</p> <p>Now, going open-source, Mercury invites global software developers to use its components, share feedback, and contribute to its growth. We believe that making some of the work we do available to everyone makes us more transparent and demonstrates how we approach working with data. Mercury is our way of contributing back to the open-source community that has been pivotal in our success.</p> <p>Collaborate with Mercury</p> <p>If you want to discuss specific functionality within the scope of Mercury, please open an issue on GitHub. This approach enables focused, organized and visible discussions that may be useful for someone else. You can also contact us at mercury.team@bbva.com.</p> <p>BBVA's GitHub</p> <p></p>"},{"location":"about/","title":"BBVA AI Factory","text":"<p>We strive to bring the opportunities that Artificial Intelligence offers to the financial industry. Our mission is to provide BBVA business units with data products aligned with the bank\u2019s strategic priorities, while helping to move forward on the path towards the future of banking.</p> <p></p>"},{"location":"about/#pioneering-ai-at-bbva","title":"Pioneering AI at BBVA","text":"<p>BBVA AI Factory is BBVA\u2019s global AI development center, which operates through local hubs in Spain, Mexico, and Turkey.</p> <p></p>"},{"location":"about/#creating-data-products","title":"Creating data products","text":"<p>Our mission within the bank is to transform the opportunities that AI offers into data products that address BBVA clients\u2019 needs.</p> <p></p>"},{"location":"about/#broadening-viewpoints","title":"Broadening viewpoints","text":"<p>We collaborate closely with the bank\u2019s business units, and we work in multidisciplinary teams made up of experts from data science, ML engineering, solution architecture, data analytics, and product.</p> <p>More about BBVA AI Factory</p> <p></p>"},{"location":"blog/","title":"Blog","text":""},{"location":"blog/2025/04/14/welcome-to-the-mercury-blog/","title":"Welcome to the Mercury Blog!","text":"<p>Welcome to the Mercury library blog! We're thrilled to introduce you to Mercury, a Python library for Machine Learning and Data Science that began as an inner-source project within BBVA.</p> <p>Created to streamline code sharing among our global tech teams, Mercury aimed to enhance collaboration and code quality through community involvement. This initiative not only improved our code but also nurtured a culture of knowledge sharing and teamwork. Going open-source is more than just sharing code \u2014 it's about embracing transparency and contributing to the open-source community that has been instrumental in our success. We invite you to explore, provide feedback, and contribute to Mercury's growth!</p>","tags":["Mercury"]},{"location":"blog/archive/2025/","title":"2025","text":""},{"location":"blog/category/mercury/","title":"Mercury","text":""}]}